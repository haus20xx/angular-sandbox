@import "node_modules/mathsass/dist/math";

.content {
    height: 100vh;
    perspective: 40em;
    background: #000;
}

.content * {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-style: preserve-3d;
}

@mixin mix-bg($color, $k) {
    @if $k < 1%{
        $k: 1%;
    }
    @if $k > 100% {
        $k: 100%;
    }
    background: mix(nth($color, 1), nth($color, 2), $weight:$k);
}

@keyframes rot {
 75%, 100% { transform: rotateX(-.5turn); }
}


$n-prisms: 24;
$height: 6.25em;
$base: 1em;
$base-c:
    #69f
    #7e4b4c;
$lat-c:
    #542252
    #7e301a;
$radius: 1.625*$height;
$base-angle: 360deg/$n-prisms;
$t: 1.75s;

.assembly { transform: rotateX(-30deg) }

.prism {
    animation: rot $t ease-in-out infinite;
}

.prism_face {
    margin: -.5*$height (-.5*$base);
    width: $base;
    height: $height;
    backface-visibility: hidden;
    background: nth($lat-c,1);
    @for $i from 0 to 6 {
        &:nth-child(#{$i + 1}) {
          transform: 
            if($i < 4,
                rotateY($i*90deg),
                rotateX(pow(-1, $i)*90deg))
            translateZ(.5 * if($i < 4, $base,
    $height));
        }
    }
}

.prism_face:nth-child(n+5) {
    margin-top: -.5*$base;
    height: $base;
    background: nth($base-c, 1);
}

.prism_face:nth-child(-n+4):nth-child(even) {
    filter: brightness(.7);
}

.positioner {
    @for $i from 0 to $n-prisms {
      $curr-angle: $i*$base-angle;
      $k: ((1 + cos($curr-angle))*50%);

      &:nth-child(#{$i + 1}) {
        transform: rotateY($curr-angle) translateZ($radius) rotateX(70deg);

        .prism {
            animation-delay: -$i*$t/$n-prisms;
        }
        .prism_face {
            @include mix-bg($lat-c, $k);

            &:nth-child(n + 5) {
                @include mix-bg($base-c, $k );
            }
        }
      }
    }
}